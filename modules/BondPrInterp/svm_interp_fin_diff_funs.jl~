
# ##################################################################
# ######################### J2: f21, f22 ###########################
# ################################################################## 

function f21_fd_inputs(svm, vtgrid; vmax=1.2, uN=10^3)
    
    du, ugrid = grid_creator(1e-4, svm.m, uN)

    f21_fd_input = @spawn [f21_int(vt, vmax, svm.pm.lambda,
                                   svm.pm.sigmal, svm.pm.r,
                                   svm.pm.gross_delta,
                                   svm.pm.xi, svm.pm.kappa; 
				   ugrid=ugrid) for vt in vtgrid]

    return fetch(f21_fd_input)
end


function f22_fd_inputs(svm, vtgrid; vmax=1.2, uN=10^3)

    du, ugrid = grid_creator(1e-4, svm.m, uN)

    f22_fd_input = @spawn [f22_int(vt, vmax, svm.pm.lambda,
                                   svm.pm.sigmal, svm.pm.r,
                                   svm.pm.gross_delta,
                                   svm.pm.xi, svm.pm.kappa; 
				   ugrid=ugrid) for vt=vtgrid]

    return fetch(f22_fd_input)
end


# ##################################################################
# ########################### f11_int ##############################
# ################################################################## 
function f11_fd_inputs(svm, vtgrid;
                       vmax=1.2, vN=10^3, uN=10^3)

    du, ugrid = grid_creator(1e-4, svm.m, uN) 
    dv, vgrid = grid_creator(1e-4, vmax, vN)

    f11_vec_future = @spawn [g11_int(vt, vgrid, u, 
				     svm.pm.lambda, svm.pm.sigmal,
				     svm.pm.r, svm.pm.gross_delta, 
				     svm.pm.xi, svm.pm.kappa) for vt in vtgrid,
                                                                   u in ugrid]

    f11_vec = sum(fetch(f11_vec_future), dims=2) * du

    return f11_vec[1:end]
end

# ##################################################################
# ########################### f2_int ###############################
# ################################################################## 
function f12_fd_inputs(svm, vtgrid, vbhlgrid;
		       vmax=1.2, vN=10^3, uN=10^3)

    du, ugrid = grid_creator(1e-4, svm.m, uN)
    dv, vgrid = grid_creator(1e-4, vmax, vN)

    f12_surf = @spawn [f12_int(vt, vbhl, ugrid,  vgrid,  
			       svm.pm.lambda, svm.pm.sigmal,
                               svm.pm.sigmah, svm.pm.r,
                               svm.pm.gross_delta, 
			       svm.pm.xi, svm.pm.kappa) for vt in vtgrid,
                                                          vbhl in vbhlgrid]

    return fetch(f12_surf)
end
	
# ##################################################################
# ########################### f3_int ###############################
# ################################################################## 
function f13_fd_inputs(svm, vtgrid, vbhlgrid;
		       vmax=1.2, vN=10^3, uN=10^3)

    du, ugrid = grid_creator(1e-4, svm.m, uN)
    dv, vgrid = grid_creator(1e-4, vmax, vN)

    f13_surf = @spawn [f13_int(vt, vbhl, ugrid,  vgrid,  
			       svm.pm.lambda, svm.pm.sigmal,
                               svm.pm.sigmah, svm.pm.r,
                               svm.pm.gross_delta, 
			       svm.pm.xi, svm.pm.kappa) for vt in vtgrid,
                                                          vbhl in vbhlgrid]

    return fetch(f13_surf)
end	

# ##################################################################
# ########################### Interp ###############################
# ################################################################## 
function fd_interp_inputs(svm;
        vtmax=.8, vtN=20, vtgrid=nothing,
        vbhlmin=.75, vbhlmax=1.25, vbhlN=5, vbhlgrid=nothing,
                          vmax=1.2, vN=10^3, uN=10^3)
    # ####################################
    # ##### Form Interpolation Grids #####
    # ####################################
    if vtgrid==nothing
       _, vtgrid=grid_creator(0.0, vtmax, vtN)
    end
    
    if vbhlgrid==nothing
       _, vbhlgrid=grid_creator(vbhlmin, vbhlmax, vbhlN)
    end
    # ####################################
                                      
    f21 = @spawn f21_fd_inputs(svm, vtgrid; vmax=vmax, uN=uN)
         
    f22 = @spawn f22_fd_inputs(svm, vtgrid; vmax=vmax, uN=uN)
    
    f11 = @spawn f11_fd_inputs(svm, vtgrid;
                               vmax=vmax, vN=vN, uN=uN)
     
    f12 = @spawn f12_fd_inputs(svm, vtgrid, vbhlgrid;
                               vmax=vmax, vN=uN, uN=uN)
     
    f13 = @spawn f13_fd_inputs(svm, vtgrid, vbhlgrid;
                               vmax=vmax, vN=vN, uN=uN)
     
    f11fd = fetch(f11)
    f12fd = fetch(f12)
    f13fd = fetch(f13)
    f21fd = fetch(f21)
    f22fd = fetch(f22)

    fd_input = Dict("vmax" => vmax,
                    "vtmax" => vtmax,
                    "vtgrid"=> vtgrid,
		    "vbhlgrid"=> vbhlgrid,
                    "vbhlmax" => vbhlmax, 
                    "f21_input"=> f21fd,
                    "f22_input"=> f22fd,
	            "f11_input"=> f11fd,
	            "f12_input"=> f12fd,
	            "f13_input"=> f13fd)

    return fd_input 
end


function fd_input_interp(bprd)

    f11_itp = interpolate(bprd["f11"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f11_sitp = Interpolations.scale(f11_itp, bprd["vtgrid"])
    
    f12_itp = interpolate(bprd["f12"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f12_sitp = Interpolations.scale(f12_itp, bprd["vtgrid"], bprd["vbhlgrid"])
    
    f13_itp = interpolate(bprd["f13"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f13_sitp = Interpolations.scale(f13_itp, bprd["vtgrid"], bprd["vbhlgrid"])
    
    f21_itp = interpolate(bprd["f21"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f21_sitp = Interpolations.scale(f21_itp, bprd["vtgrid"])
    
    f22_itp = interpolate(bprd["f22"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f22_sitp = Interpolations.scale(f22_itp, bprd["vtgrid"])

    return Dict("f11"=> f11_sitp,
                "f12"=> f12_sitp,
                "f13"=> f13_sitp,
                "f21"=> f21_sitp,
                "f22"=> f22_sitp)
end
