
# ##################################################################
# ######################### J2: f21, f22 ###########################
# ################################################################## 

function f21_fd_inputs(vtgrid, m, vmax, _lambda, sigma,
		       r, gross_delta, xi, kappa;
		     uN=10^3)
	du, ugrid = grid_creator(1e-4, m, uN)

	f21_fd_input = fetch(@spawn [f21_int(vt, vmax, _lambda, sigma, 
                			r, gross_delta, xi, kappa; 
					ugrid=ugrid)
					for vt=vtgrid])
	return f21_fd_input
end


function f21_fd(vtgrid, m, vmax, _lambda, sigma,
	       r, gross_delta, xi, kappa; uN=10^3)

	du, ugrid = grid_creator(1e-4, m, uN)

	f21_fd_input = fetch(@spawn [f21_int(vt, vmax, _lambda, sigma, 
                			r, gross_delta, xi, kappa; 
					ugrid=ugrid)
					for vt=vtgrid])
	
	f21_fd_itp = interpolate(f21_fd_input, BSpline(Cubic(Line(Interpolations.OnGrid()))))
	return Interpolations.scale(f21_fd_itp, vtgrid)
end

function f22_fd_inputs(vtgrid, m, vmax, _lambda, sigma,
		       r, gross_delta, xi, kappa;
		     uN=10^3)
	du, ugrid = grid_creator(1e-4, m, uN)

	f22_fd_input = fetch(@spawn [f22_int(vt, vmax, _lambda, sigma, 
                			r, gross_delta, xi, kappa; 
					ugrid=ugrid)
					for vt=vtgrid])
	return f22_fd_input
end


function f22_fd(vtgrid, m, vmax, _lambda, sigma,
	       r, gross_delta, xi, kappa; uN=10^3)

	du, ugrid = grid_creator(1e-4, m, uN)

	f22_fd_input = fetch(@spawn [f22_int(vt, vmax, _lambda, sigma, 
                			r, gross_delta, xi, kappa; 
					ugrid=ugrid)
					for vt=vtgrid])
	
	f22_fd_itp = interpolate(f22_fd_input, BSpline(Cubic(Line(Interpolations.OnGrid()))))
	return Interpolations.scale(f22_fd_itp, vtgrid)
end

# ##################################################################
# ########################### f11_int ##############################
# ################################################################## 
function f11_fd_inputs(vtgrid, _lambda, sigmal,
		     r, gross_delta, xi, kappa;
	             vmax=1.2, vN=10^3,
		     ttm=1.0, uN=10^3)
	
        dv, vgrid = grid_creator(1e-4, vmax, vN)
        du, ugrid = grid_creator(1e-4, ttm, uN) 

	f11_vec_future = @spawn [g11_int(vt, vgrid, u, 
				       _lambda, sigmal,
				       r, gross_delta, 
				       xi, kappa) for vt=vtgrid, u=ugrid]
	f11_vec = sum(fetch(f11_vec_future), dims=2) * du
	
	return f11_vec[1:end]
end


function f11_fd(vtgrid, _lambda, sigmal,
		     r, gross_delta, xi, kappa;
	             vmax=1.2, vN=10^3,
		     ttm=1.0, uN=10^3)

        dv, vgrid = grid_creator(1e-4, vmax, vN)
        du, ugrid = grid_creator(1e-4, ttm, uN) 

	f11_vec_future = @spawn [g11_int(vt, vgrid, u, 
				       _lambda, sigmal,
				       r, gross_delta, 
				       xi, kappa) for vt=vtgrid, u=ugrid]
	f11_vec = sum(fetch(f11_vec_future), dims=2) * du
	
	f11_itp = interpolate(f11_vec[1:end], BSpline(Cubic(Line(Interpolations.OnGrid()))))
	return Interpolations.scale(f11_itp, vtgrid)

end


# ##################################################################
# ########################### f2_int ###############################
# ################################################################## 
function f12_fd_inputs(vtgrid, vbhlgrid, 
		     _lambda, sigmal, sigmah,
		     r, gross_delta, xi, kappa;
		     vmax=1.2, vN=10^3,ttm=1.0, uN=10^3)

	du, ugrid = grid_creator(1e-4, ttm, uN)
	dv, vgrid = grid_creator(1e-4, vmax, vN)

	f12_surf = @spawn [f12_int(vt, vbhl, ugrid,  vgrid,  
				       _lambda, sigmal, sigmah,
				       r, gross_delta, 
				       xi, kappa) for vt=vtgrid, vbhl=vbhlgrid]
	
	return fetch(f12_surf)
end
	

function f12_fd(vtgrid, vbhlgrid, 
		     _lambda, sigmal, sigmah,
		     r, gross_delta, xi, kappa;
		     vmax=1.2, vN=10^3,ttm=1.0, uN=10^3)

	du, ugrid = grid_creator(1e-4, ttm, uN)
	dv, vgrid = grid_creator(1e-4, vmax, vN)

	f12_surf = @spawn [f12_int(vt, vbhl, ugrid,  vgrid,  
				       _lambda, sigmal, sigmah,
				       r, gross_delta, 
				       xi, kappa) for vt=vtgrid, vbhl=vbhlgrid]
	
	f12_itp = interpolate(fetch(f12_surf), BSpline(Cubic(Line(Interpolations.OnGrid()))))
	return Interpolations.scale(f12_itp, vtgrid, vbhlgrid)

end


# ##################################################################
# ########################### f3_int ###############################
# ################################################################## 
function f13_fd_inputs(vtgrid, vbhlgrid, 
		     _lambda, sigmal, sigmah,
		     r, gross_delta, xi, kappa;
		     vmax=1.2, vN=10^3,ttm=1.0, uN=10^3)

	du, ugrid = grid_creator(1e-4, ttm, uN)
	dv, vgrid = grid_creator(1e-4, vmax, vN)

	f13_surf = @spawn [f13_int(vt, vbhl, ugrid,  vgrid,  
			      _lambda, sigmal, sigmah,
			      r, gross_delta, 
			      xi, kappa) for vt=vtgrid, vbhl=vbhlgrid]
	return fetch(f13_surf)
end	




function f13_fd(vtgrid, vbhlgrid, 
		     _lambda, sigmal, sigmah,
		     r, gross_delta, xi, kappa;
		     vmax=1.2, vN=10^3,ttm=1.0, uN=10^3)

	du, ugrid = grid_creator(1e-4, ttm, uN)
	dv, vgrid = grid_creator(1e-4, vmax, vN)

	f13_surf = @spawn [f13_int(vt, vbhl, ugrid,  vgrid,  
			      _lambda, sigmal, sigmah,
			      r, gross_delta, 
			      xi, kappa) for vt=vtgrid, vbhl=vbhlgrid]
	
	f13_itp = interpolate(fetch(f13_surf), BSpline(Cubic(Line(Interpolations.OnGrid()))))
	return Interpolations.scale(f13_itp, vtgrid, vbhlgrid)

end


# ##################################################################
# ########################### Interp ###############################
# ################################################################## 
function fd_interp_input(svm;
        vtmax=.8, vtN=20, vtgrid=nothing,
        vbhlmin=.75, vbhlmax=1.25, vbhlN=5, vbhlgrid=nothing,
        vmax=1.2, vN=10^3, uN=10^3)
	
        # ####################################
        # ######## Extract Parameters ########
        # ####################################
        # Capital Structure
        m = svm.m
        c = svm.c
        p = svm.p
    
        # Taxes & Default
        
        # Dynamics
        r = svm.pm.r
        gross_delta = svm.pm.gross_delta
        # iota?
    
        # Liquidity
        xi = svm.pm.xi
        kappa = svm.pm.kappa
        
        # Volatility
        _lambda = svm.pm.lambda
        sigmal = svm.pm.sigmal
        sigmah = svm.pm.sigmah 
        # ####################################
        
        # ####################################
        # ##### Form Interpolation Grids #####
        # ####################################
        if vtgrid==nothing
           _, vtgrid=grid_creator(0.0, vtmax, vtN)
        end
        
        if vbhlgrid==nothing
           _, vbhlgrid=grid_creator(vbhlmin, vbhlmax, vbhlN)
        end
        # ####################################

	f21 = @spawn f21_fd_inputs(vtgrid, m, vmax, 
                          _lambda, sigmal, 
                          r, gross_delta, xi, kappa, uN=uN)
    
 	f22 = @spawn f22_fd_inputs(vtgrid, m, vmax, 
                          _lambda, sigmal, 
                          r, gross_delta, xi, kappa, uN=uN)
        
        f11 = @spawn f11_fd_inputs(vtgrid, _lambda, sigmal, 
                          r, gross_delta, xi, kappa;
                          vmax=vmax, vN=vN,
                          ttm=m, uN=uN)
    
        f12 = @spawn f12_fd_inputs(vtgrid, vbhlgrid,
                          _lambda, sigmal, sigmah,
                          r, gross_delta, xi, kappa;
                          vmax=vmax, vN=uN,
                          ttm=m, uN=uN)
        
        f13 = @spawn f13_fd_inputs(vtgrid, vbhlgrid,
                          _lambda, sigmal, sigmah,
                          r, gross_delta, xi, kappa;
                          vmax=vmax, vN=vN,
                          ttm=m, uN=uN)

	f11fd = fetch(f11)
	f12fd = fetch(f12)
	f13fd = fetch(f13)
	f21fd = fetch(f21)
	f22fd = fetch(f22)
    
	fd_input = Dict("vtgrid"=> vtgrid,
			"vbhlgrid"=> vbhlgrid,
			"f21"=> f21fd,
                        "f22"=> f22fd,
			"f11"=> f11fd,
			"f12"=> f12fd,
			"f13"=> f13fd)
        
        return fd_input 
end


function fd_input_interp(bprd)

    f11_itp = interpolate(bprd["f11"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f11_sitp = Interpolations.scale(f11_itp, bprd["vtgrid"])
    
    f12_itp = interpolate(bprd["f12"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f12_sitp = Interpolations.scale(f12_itp, bprd["vtgrid"], bprd["vbhlgrid"])
    
    f13_itp = interpolate(bprd["f13"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f13_sitp = Interpolations.scale(f13_itp, bprd["vtgrid"], bprd["vbhlgrid"])
    
    f21_itp = interpolate(bprd["f21"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f21_sitp = Interpolations.scale(f21_itp, bprd["vtgrid"])
    
    f22_itp = interpolate(bprd["f22"], BSpline(Cubic(Line(Interpolations.OnGrid()))))
    f22_sitp = Interpolations.scale(f22_itp, bprd["vtgrid"])

    return f11_sitp, f12_sitp, f13_sitp, f21_sitp, f22_sitp

end


function fd_interp(svm;
        vtmax=.8, vtN=20, vtgrid=nothing,
        vbhlmin=.75, vbhlmax=1.25, vbhlN=5, vbhlgrid=nothing,
        vmax=1.2, vN=10^3, uN=10^3)
	
        # ####################################
        # ######## Extract Parameters ########
        # ####################################
        # Capital Structure
        m = svm.m
        c = svm.c
        p = svm.p
    
        # Taxes & Default
        
        # Dynamics
        r = svm.pm.r
        gross_delta = svm.pm.gross_delta
        # iota?
    
        # Liquidity
        xi = svm.pm.xi
        kappa = svm.pm.kappa
        
        # Volatility
        _lambda = svm.pm.lambda
        sigmal = svm.pm.sigmal
        sigmah = svm.pm.sigmah 
        # ####################################
        
        # ####################################
        # ##### Form Interpolation Grids #####
        # ####################################
        if vtgrid==nothing
           _, vtgrid=grid_creator(0.0, vtmax, vtN)
        end
        
        if vbhlgrid==nothing
           _, vbhlgrid=grid_creator(vbhlmin, vbhlmax, vbhlN)
        end
        # ####################################

	f21 = @spawn f21_fd(vtgrid, m, vmax, 
                          _lambda, sigmal, 
                          r,gross_delta, xi, kappa, uN=uN)
    
 	f22 = @spawn f22_fd(vtgrid, m, vmax, 
                          _lambda, sigmal, 
                          r,gross_delta, xi, kappa, uN=uN)
        
        f11 = @spawn f11_fd(vtgrid, _lambda, sigmal, 
                          r, gross_delta, xi, kappa;
                          vmax=vmax, vN=vN,
                          ttm=m, uN=uN)
    
        f12 = @spawn f12_fd(vtgrid, vbhlgrid,
                          _lambda, sigmal, sigmah,
                          r, gross_delta, xi, kappa;
                          vmax=vmax, vN=uN,
                          ttm=m, uN=uN)
        
        f13 = @spawn f13_fd(vtgrid, vbhlgrid,
                          _lambda, sigmal, sigmah,
                          r, gross_delta, xi, kappa;
                          vmax=vmax, vN=vN,
                          ttm=m, uN=uN)
        
        return fetch(f11), fetch(f12), fetch(f13), fetch(f21), fetch(22)
end
